import { Controller, Get, Body, Post, Param, Delete, Put} from '@nestjs/common'; // Import decorators from NestJS
import { ProblemService } from './problem.service'; // Import the service we created earlier
import { Problem } from '@prisma/client'; // Import the Problem type generated by Prisma
import { CreateProblemDto } from './dto/create-problem.dto'; // Import the DTO for creating a problem
import { UpdateProblemDto } from './dto/update-problem.dto';

@Controller('problems') // This decorator defines the route for this controller
export class ProblemController {
  constructor(private readonly problemService: ProblemService) {} // Inject the ProblemService

  @Get() // This decorator defines a GET HTTP route at /problems
  async getAllProblems(): Promise<Problem[]> {
    return this.problemService.getAllProblems(); // Call the service method to fetch problems
  }

  @Post() // This decorator defines a POST HTTP route at /problems
  create(@Body() createProblemDto: CreateProblemDto) {
    return this.problemService.create(createProblemDto);
  }

  @Get(':slug')
  findOne(@Param('slug') slug: string) {
    return this.problemService.findBySlug(slug);
  }

  @Delete(':slug')
  deleteProblem(@Param('slug') slug: string){
    return this.problemService.deleteProblemBySlug(slug);
  }

  @Put(':slug')
  updateProblem(@Param('slug') slug: string, @Body() updateProblemDto: UpdateProblemDto,){
    return this.problemService.updateProblemBySlug(slug, updateProblemDto);
  }
}
