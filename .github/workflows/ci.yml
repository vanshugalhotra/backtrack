name: CI Workflow

on:
  push:
    branches:
      - dev # Trigger on push to dev branch
  pull_request:
    branches:
      - dev # Trigger on PR to dev branch

jobs:
  # Frontend Job
  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js for frontend
        uses: actions/setup-node@v2
        with:
          node-version: "22"

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run frontend Lint
        run: |
          cd frontend
          npm run lint

      - name: Run frontend Type Check
        run: |
          cd frontend
          npx tsc --noEmit

      - name: Run frontend Tests (Placeholder)
        run: |
          cd frontend
          echo "No tests implemented yet. Skipping..."

      - name: Build frontend
        run: |
          cd frontend
          npm run build

  # Backend Job
  backend:
    runs-on: ubuntu-latest
    needs: frontend

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: backtrack_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js for backend
        uses: actions/setup-node@v2
        with:
          node-version: "22"

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Set environment variables for testing
        run: |
          echo "DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/backtrack_test" > backend/.env.test
          echo "DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/backtrack_test" > backend/.env

      - name: Generate Prisma client
        run: |
          cd backend
          npx prisma generate

      - name: Apply Prisma schema (migrate or push)
        run: |
          cd backend
          npx prisma migrate deploy --preview-feature || npx prisma db push

      - name: Compile C++ test binaries
        run: |
          cd backend/test-bin
          chmod +x compile.sh
          ./compile.sh

      - name: Ensure executables have proper permissions
        run: |
          chmod +x ./backend/test-bin/*.out

      - name: Run backend Lint
        run: |
          cd backend
          npm run lint

      - name: Run backend Type Check
        run: |
          cd backend
          npx tsc --noEmit

      - name: Run backend Tests
        run: |
          cd backend
          npm run test:e2e

      - name: Build backend
        run: |
          cd backend
          npm run build
